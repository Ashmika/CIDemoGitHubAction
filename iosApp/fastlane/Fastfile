# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

APP_STORE_CONNECT_API_KEY_KEY = ENV["APP_STORE_CONNECT_API_KEY_KEY"]
APP_STORE_CONNECT_API_KEY_ISSUER_ID = ENV["APP_STORE_CONNECT_API_KEY_ISSUER_ID"]
APP_STORE_CONNECT_API_KEY_KEY_ID = ENV["APP_STORE_CONNECT_API_KEY_KEY_ID"]
APP_STORE_CONNECT_API_KEY_IN_HOUSE = ENV["APP_STORE_CONNECT_API_KEY_IN_HOUSE"]
APP_STORE_CONNECT_API_KEY_IS_KEY_CONTENT_BASE64 = ENV["APP_STORE_CONNECT_API_KEY_IS_KEY_CONTENT_BASE64"]
FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD = ENV["FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD"]
FASTLANE_USER = ENV["FASTLANE_USER"]
FASTLANE_PASSWORD = ENV["FASTLANE_PASSWORD"]
MATCH_PASSWORD = ENV["MATCH_PASSWORD"]
TEAM_ID = ENV["TEAM_ID"]
TEMP_KEYCHAIN_USER = ENV["TEMP_KEYCHAIN_USER"]
TEMP_KEYCHAIN_PASSWORD = ENV["TEMP_KEYCHAIN_PASSWORD"]
GIT_AUTHORIZATION = ENV["GIT_AUTHORIZATION"]

def delete_temp_keychain(name)
  delete_keychain(
    name: name
  ) if File.exist? File.expand_path("~/Library/Keychains/#{name}-db")
end

def create_temp_keychain(name, password)
  create_keychain(
    name: name,
    password: password,
    unlock: false,
    timeout: 0
  )
end

def ensure_temp_keychain(name, password)
  delete_temp_keychain(name)
  create_temp_keychain(name, password)
end

platform :ios do

  desc "Description of what the lane does"
  lane :develop_build do
      # add actions here: https://docs.fastlane.tools/actions
      create_temporary_keychain
      provisioning_profiles_development
      build_for_develop
  end

  desc "Create Temp Keychain"
  private_lane :create_temporary_keychain do
      keychain_name = TEMP_KEYCHAIN_USER
      keychain_password = TEMP_KEYCHAIN_PASSWORD
      ensure_temp_keychain(keychain_name, keychain_password)
  end

#   desc "Install pods via bundle exec"
#   private_lane :install_pods do
#      cocoapods(clean_install: true, use_bundle_exec: true)
#   end

  desc "Sync Development Certification and Provisioning Profile"
  lane :provisioning_profiles_development do
     match(
       type: "development",
       git_basic_authorization: Base64.strict_encode64(GIT_AUTHORIZATION),
       force: true,
       readonly: true,
       keychain_name: TEMP_KEYCHAIN_USER,
       keychain_password: TEMP_KEYCHAIN_PASSWORD,
       api_key: app_store_connect_api_key,
       app_identifier: "com.ciapp.demo"
     )
  end

  desc "Export Development iPA"
  lane :build_for_develop do
      gym(
         workspace:'iosApp.xcworkspace',
         scheme: 'iosApp',
         clean: true,
         configuration: "Debug",
         include_symbols: true,
         export_method: "development",
         output_directory: "build", # Destination directory. Defaults to current directory.
         output_name: "develop-app.ipa",
      )
   end


end
