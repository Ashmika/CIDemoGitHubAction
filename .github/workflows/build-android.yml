
name: Android Build
on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - master
    types: [closed ]
  workflow_dispatch:

jobs:
  test_Android_APK:
    runs-on: windows-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: 11

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1.138.0
        with:
            ruby-version: 3.2.1
            bundler-cache: true

      - name: Install Bundler
        run: gem install bundler

      - name: Install gems
        run: cd androidApp && bundle install

#      - name: Caching Gradle packages
#        uses: actions/cache@v2
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-

      - name: Credentials setup
        run: |
          git config --global credential.helper store
          echo "https://Ashmika:${{ secrets.GIT_AUTHORIZATION }}@github.com" > ~/.git-credentials

      - name: Create libs folder and clone repository
        run: |
          rm -r libs && mkdir libs && git clone https://Ashmika:${{ secrets.GIT_AUTHORIZATION }}@github.com/Ashmika/DemoAndroidLocalLibs.git libs --verbose && ls libs
#          mkdir libs && cd libs && git clone https://Ashmika:${{ secrets.GIT_AUTHORIZATION }}@github.com/Ashmika/DemoAndroidLocalLibs.git --verbose && ls DemoAndroidLocalLibs

#      - name: Build Gradle
#        run: ./gradlew assembleDebug

#      - name: Create Debug APK
#        run: cd androidApp && bundle exec fastlane build_dev --verbose

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: assets
          path: |
            ${{ github.workspace }}/androidApp/build/outputs/apk/debug


      - name: Create Firebase Service Credentials file
        env:
          FIREBASE_LOGIN_CREDENTIALS: ${{ secrets.FIREBASE_LOGIN_CREDENTIALS }}
        run: |
            cd iosApp/fastlane
            echo $FIREBASE_LOGIN_CREDENTIALS | base64 --decode > firebase_login_credentials.json

      - name: Distribute app with Firebase App Distribution Fastlane
        run: cd androidApp && bundle exec fastlane distribute
        env:
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_LOGIN_CREDENTIALS_PATH: firebase_login_credentials.json

